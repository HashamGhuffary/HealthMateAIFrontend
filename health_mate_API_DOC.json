{"swagger": "2.0", "info": {"title": "HealthMateAI API", "description": "API for HealthMateAI application", "termsOfService": "https://www.healthmateai.com/terms/", "contact": {"email": "contact@healthmateai.com"}, "license": {"name": "BSD License"}, "version": "v1"}, "host": "127.0.0.1:8000", "schemes": ["http"], "basePath": "/api", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/appointments/": {"get": {"operationId": "appointments_list", "summary": "ViewSet for appointments.", "description": "Provides CRUD operations for appointments.\nIncludes filters for date, status, and doctor/patient.", "parameters": [{"name": "doctor", "in": "query", "description": "doctor", "required": false, "type": "string"}, {"name": "patient", "in": "query", "description": "patient", "required": false, "type": "string"}, {"name": "status", "in": "query", "description": "status", "required": false, "type": "string", "enum": ["pending", "confirmed", "cancelled", "completed"]}, {"name": "date_from", "in": "query", "description": "date_from", "required": false, "type": "string"}, {"name": "date_to", "in": "query", "description": "date_to", "required": false, "type": "string"}, {"name": "reason_contains", "in": "query", "description": "reason_contains", "required": false, "type": "string"}, {"name": "notes_contains", "in": "query", "description": "notes_contains", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Appointment"}}}}, "tags": ["appointments"]}, "post": {"operationId": "appointments_create", "summary": "ViewSet for appointments.", "description": "Provides CRUD operations for appointments.\nIncludes filters for date, status, and doctor/patient.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Appointment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Appointment"}}}, "tags": ["appointments"]}, "parameters": []}, "/appointments/{id}/": {"get": {"operationId": "appointments_read", "summary": "ViewSet for appointments.", "description": "Provides CRUD operations for appointments.\nIncludes filters for date, status, and doctor/patient.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Appointment"}}}, "tags": ["appointments"]}, "put": {"operationId": "appointments_update", "summary": "ViewSet for appointments.", "description": "Provides CRUD operations for appointments.\nIncludes filters for date, status, and doctor/patient.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Appointment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Appointment"}}}, "tags": ["appointments"]}, "patch": {"operationId": "appointments_partial_update", "summary": "ViewSet for appointments.", "description": "Provides CRUD operations for appointments.\nIncludes filters for date, status, and doctor/patient.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Appointment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Appointment"}}}, "tags": ["appointments"]}, "delete": {"operationId": "appointments_delete", "summary": "ViewSet for appointments.", "description": "Provides CRUD operations for appointments.\nIncludes filters for date, status, and doctor/patient.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["appointments"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/appointments/{id}/add_notes/": {"post": {"operationId": "appointments_add_notes", "description": "Add notes to an appointment.\nOnly doctors can add notes.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Appointment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Appointment"}}}, "tags": ["appointments"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/appointments/{id}/update_status/": {"post": {"operationId": "appointments_update_status", "description": "Update the status of an appointment.\nOnly doctors can update appointment status.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Appointment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Appointment"}}}, "tags": ["appointments"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/auth/login/": {"post": {"operationId": "auth_login_create", "description": "Login with email and password to receive authentication tokens", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["email", "password"], "type": "object", "properties": {"email": {"description": "User email address", "type": "string"}, "password": {"description": "User password", "type": "string"}}}}], "responses": {"200": {"description": "Login successful", "schema": {"type": "object", "properties": {"user": {"type": "object", "properties": {"id": {"type": "integer"}, "email": {"type": "string"}, "username": {"type": "string"}, "full_name": {"type": "string"}, "age": {"type": "integer"}, "gender": {"type": "string"}, "location": {"type": "string"}, "is_doctor": {"type": "boolean"}}}, "tokens": {"type": "object", "properties": {"refresh": {"type": "string"}, "access": {"type": "string"}}}}}}, "400": {"description": "Invalid credentials", "schema": {"type": "object"}}}, "tags": ["auth"]}, "parameters": []}, "/auth/profile/": {"get": {"operationId": "auth_profile_read", "description": "Get current user profile information", "parameters": [], "responses": {"200": {"description": "User profile retrieved successfully", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "email": {"type": "string"}, "username": {"type": "string"}, "full_name": {"type": "string"}, "age": {"type": "integer"}, "gender": {"type": "string"}, "location": {"type": "string"}, "is_doctor": {"type": "boolean"}}}}, "401": {"description": "Authentication credentials not provided"}}, "tags": ["auth"]}, "put": {"operationId": "auth_profile_update", "description": "Update current user profile information", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"username": {"description": "Username", "type": "string"}, "full_name": {"description": "User's full name", "type": "string"}, "age": {"description": "User's age", "type": "integer"}, "gender": {"description": "User's gender (M/F/O/N)", "type": "string"}, "location": {"description": "User's location", "type": "string"}}}}], "responses": {"200": {"description": "User profile updated successfully", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "email": {"type": "string"}, "username": {"type": "string"}, "full_name": {"type": "string"}, "age": {"type": "integer"}, "gender": {"type": "string"}, "location": {"type": "string"}, "is_doctor": {"type": "boolean"}}}}, "400": {"description": "Bad request"}, "401": {"description": "Authentication credentials not provided"}}, "tags": ["auth"]}, "patch": {"operationId": "auth_profile_partial_update", "description": "Partially update current user profile information", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"username": {"description": "Username", "type": "string"}, "full_name": {"description": "User's full name", "type": "string"}, "age": {"description": "User's age", "type": "integer"}, "gender": {"description": "User's gender (M/F/O/N)", "type": "string"}, "location": {"description": "User's location", "type": "string"}}}}], "responses": {"200": {"description": "User profile updated successfully", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "email": {"type": "string"}, "username": {"type": "string"}, "full_name": {"type": "string"}, "age": {"type": "integer"}, "gender": {"type": "string"}, "location": {"type": "string"}, "is_doctor": {"type": "boolean"}}}}, "400": {"description": "Bad request"}, "401": {"description": "Authentication credentials not provided"}}, "tags": ["auth"]}, "parameters": []}, "/auth/register/": {"post": {"operationId": "auth_register_create", "description": "Create a new user account and return authentication tokens", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["email", "username", "password", "password_confirmation"], "type": "object", "properties": {"email": {"description": "User email address", "type": "string"}, "username": {"description": "Username", "type": "string"}, "password": {"description": "Password (min 8 characters)", "type": "string"}, "password_confirmation": {"description": "Password confirmation", "type": "string"}, "full_name": {"description": "User's full name", "type": "string"}, "age": {"description": "User's age", "type": "integer"}, "gender": {"description": "User's gender (M/F/O/N)", "type": "string"}, "location": {"description": "User's location", "type": "string"}, "is_doctor": {"description": "Whether user is a doctor", "type": "boolean"}}}}], "responses": {"201": {"description": "User created successfully", "schema": {"type": "object", "properties": {"user": {"type": "object", "properties": {"id": {"type": "integer"}, "email": {"type": "string"}, "username": {"type": "string"}, "full_name": {"type": "string"}, "age": {"type": "integer"}, "gender": {"type": "string"}, "location": {"type": "string"}, "is_doctor": {"type": "boolean"}}}, "tokens": {"type": "object", "properties": {"refresh": {"type": "string"}, "access": {"type": "string"}}}}}}, "400": {"description": "Bad request", "schema": {"type": "object"}}}, "tags": ["auth"]}, "parameters": []}, "/auth/token/refresh/": {"post": {"operationId": "auth_token_refresh_create", "description": "Use refresh token to get a new access token", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"description": "Refresh token", "type": "string"}}}}], "responses": {"200": {"description": "Token refresh successful", "schema": {"type": "object", "properties": {"access": {"description": "New access token", "type": "string"}, "refresh": {"description": "New refresh token (if ROTATE_REFRESH_TOKENS=True)", "type": "string"}}}}, "401": {"description": "Invalid refresh token", "schema": {"type": "object"}}}, "tags": ["auth"]}, "parameters": []}, "/chat/chat/": {"post": {"operationId": "chat_chat_create", "summary": "API endpoint for chatting with the AI assistant.", "description": "Request body should contain a 'message' field with the user's message.\nReturns the AI assistant's response.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["chat"]}, "parameters": []}, "/chat/history/": {"get": {"operationId": "chat_history_list", "description": "API endpoint for listing a user's chat history.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ChatLog"}}}}, "tags": ["chat"]}, "parameters": []}, "/dashboard/": {"get": {"operationId": "dashboard_list", "description": "API endpoint for the mobile app dashboard/home screen.\nCollates data from various sources to provide a complete picture of the user's health.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["dashboard"]}, "parameters": []}, "/diagnostics/diagnoses/": {"get": {"operationId": "diagnostics_diagnoses_list", "description": "API endpoint for managing diagnoses.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Diagnosis"}}}}, "tags": ["diagnostics"]}, "post": {"operationId": "diagnostics_diagnoses_create", "description": "API endpoint for managing diagnoses.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DiagnosisCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DiagnosisCreate"}}}, "tags": ["diagnostics"]}, "parameters": []}, "/diagnostics/diagnoses/from_symptom_check/": {"post": {"operationId": "diagnostics_diagnoses_from_symptom_check", "description": "Create a diagnosis from a symptom check result", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Diagnosis"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Diagnosis"}}}, "tags": ["diagnostics"]}, "parameters": []}, "/diagnostics/diagnoses/{id}/": {"get": {"operationId": "diagnostics_diagnoses_read", "description": "API endpoint for managing diagnoses.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Diagnosis"}}}, "tags": ["diagnostics"]}, "put": {"operationId": "diagnostics_diagnoses_update", "description": "API endpoint for managing diagnoses.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DiagnosisUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DiagnosisUpdate"}}}, "tags": ["diagnostics"]}, "patch": {"operationId": "diagnostics_diagnoses_partial_update", "description": "API endpoint for managing diagnoses.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DiagnosisUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DiagnosisUpdate"}}}, "tags": ["diagnostics"]}, "delete": {"operationId": "diagnostics_diagnoses_delete", "description": "API endpoint for managing diagnoses.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["diagnostics"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/diagnostics/diagnoses/{id}/generate_treatment/": {"post": {"operationId": "diagnostics_diagnoses_generate_treatment", "description": "Generate a treatment plan for this diagnosis", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Diagnosis"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Diagnosis"}}}, "tags": ["diagnostics"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/diagnostics/diagnoses/{id}/mark_chronic/": {"post": {"operationId": "diagnostics_diagnoses_mark_chronic", "description": "Mark a diagnosis as chronic", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Diagnosis"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Diagnosis"}}}, "tags": ["diagnostics"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/diagnostics/diagnoses/{id}/resolve/": {"post": {"operationId": "diagnostics_diagnoses_resolve", "description": "Mark a diagnosis as resolved", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Diagnosis"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Diagnosis"}}}, "tags": ["diagnostics"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/diagnostics/follow-ups/": {"get": {"operationId": "diagnostics_follow-ups_list", "description": "API endpoint for managing follow-ups.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/FollowUp"}}}}, "tags": ["diagnostics"]}, "post": {"operationId": "diagnostics_follow-ups_create", "description": "API endpoint for managing follow-ups.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FollowUp"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/FollowUp"}}}, "tags": ["diagnostics"]}, "parameters": []}, "/diagnostics/follow-ups/{id}/": {"get": {"operationId": "diagnostics_follow-ups_read", "description": "API endpoint for managing follow-ups.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FollowUp"}}}, "tags": ["diagnostics"]}, "put": {"operationId": "diagnostics_follow-ups_update", "description": "API endpoint for managing follow-ups.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FollowUpUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FollowUpUpdate"}}}, "tags": ["diagnostics"]}, "patch": {"operationId": "diagnostics_follow-ups_partial_update", "description": "API endpoint for managing follow-ups.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FollowUpUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FollowUpUpdate"}}}, "tags": ["diagnostics"]}, "delete": {"operationId": "diagnostics_follow-ups_delete", "description": "API endpoint for managing follow-ups.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["diagnostics"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/diagnostics/follow-ups/{id}/complete/": {"post": {"operationId": "diagnostics_follow-ups_complete", "description": "Mark a follow-up as completed", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FollowUp"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/FollowUp"}}}, "tags": ["diagnostics"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/diagnostics/follow-ups/{id}/schedule/": {"post": {"operationId": "diagnostics_follow-ups_schedule", "description": "Schedule a follow-up", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FollowUp"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/FollowUp"}}}, "tags": ["diagnostics"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/diagnostics/treatments/": {"get": {"operationId": "diagnostics_treatments_list", "description": "API endpoint for managing treatments.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Treatment"}}}}, "tags": ["diagnostics"]}, "post": {"operationId": "diagnostics_treatments_create", "description": "API endpoint for managing treatments.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Treatment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Treatment"}}}, "tags": ["diagnostics"]}, "parameters": []}, "/diagnostics/treatments/{id}/": {"get": {"operationId": "diagnostics_treatments_read", "description": "API endpoint for managing treatments.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Treatment"}}}, "tags": ["diagnostics"]}, "put": {"operationId": "diagnostics_treatments_update", "description": "API endpoint for managing treatments.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TreatmentUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TreatmentUpdate"}}}, "tags": ["diagnostics"]}, "patch": {"operationId": "diagnostics_treatments_partial_update", "description": "API endpoint for managing treatments.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TreatmentUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TreatmentUpdate"}}}, "tags": ["diagnostics"]}, "delete": {"operationId": "diagnostics_treatments_delete", "description": "API endpoint for managing treatments.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["diagnostics"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/diagnostics/treatments/{id}/complete/": {"post": {"operationId": "diagnostics_treatments_complete", "description": "Mark a treatment as completed", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Treatment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Treatment"}}}, "tags": ["diagnostics"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/diagnostics/treatments/{id}/discontinue/": {"post": {"operationId": "diagnostics_treatments_discontinue", "description": "Mark a treatment as discontinued", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Treatment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Treatment"}}}, "tags": ["diagnostics"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/diagnostics/treatments/{id}/rate/": {"post": {"operationId": "diagnostics_treatments_rate", "description": "Rate the effectiveness and adherence of a treatment", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Treatment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Treatment"}}}, "tags": ["diagnostics"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/doctors/": {"get": {"operationId": "doctors_list", "description": "ViewSet for listing and retrieving doctor profiles.", "parameters": [{"name": "rating_min", "in": "query", "description": "rating_min", "required": false, "type": "string"}, {"name": "rating_max", "in": "query", "description": "rating_max", "required": false, "type": "string"}, {"name": "location", "in": "query", "description": "location", "required": false, "type": "string"}, {"name": "specialty", "in": "query", "description": "specialty", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/DoctorProfile"}}}}, "tags": ["doctors"]}, "parameters": []}, "/doctors/profile/": {"get": {"operationId": "doctors_profile_read", "description": "View for updating a doctor's own profile.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DoctorProfileUpdate"}}}, "tags": ["doctors"]}, "put": {"operationId": "doctors_profile_update", "description": "View for updating a doctor's own profile.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DoctorProfileUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DoctorProfileUpdate"}}}, "tags": ["doctors"]}, "patch": {"operationId": "doctors_profile_partial_update", "description": "View for updating a doctor's own profile.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DoctorProfileUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DoctorProfileUpdate"}}}, "tags": ["doctors"]}, "parameters": []}, "/doctors/{doctor_id}/reviews/": {"get": {"operationId": "doctors_reviews_list", "description": "View for listing reviews for a specific doctor.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/DoctorReview"}}}}, "tags": ["doctors"]}, "parameters": [{"name": "doctor_id", "in": "path", "required": true, "type": "string"}]}, "/doctors/{doctor_id}/reviews/create/": {"post": {"operationId": "doctors_reviews_create_create", "description": "View for creating a review for a doctor.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DoctorReview"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DoctorReview"}}}, "tags": ["doctors"]}, "parameters": [{"name": "doctor_id", "in": "path", "required": true, "type": "string"}]}, "/doctors/{id}/": {"get": {"operationId": "doctors_read", "description": "ViewSet for listing and retrieving doctor profiles.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DoctorProfile"}}}, "tags": ["doctors"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/emergency/alerts/": {"get": {"operationId": "emergency_alerts_list", "description": "API endpoint for managing emergency alerts.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/EmergencyAlert"}}}}, "tags": ["emergency"]}, "post": {"operationId": "emergency_alerts_create", "description": "API endpoint for managing emergency alerts.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EmergencyAlertCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/EmergencyAlertCreate"}}}, "tags": ["emergency"]}, "parameters": []}, "/emergency/alerts/active/": {"get": {"operationId": "emergency_alerts_active", "description": "Get active emergency alerts", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/EmergencyAlert"}}}}, "tags": ["emergency"]}, "parameters": []}, "/emergency/alerts/{id}/": {"get": {"operationId": "emergency_alerts_read", "description": "API endpoint for managing emergency alerts.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EmergencyAlert"}}}, "tags": ["emergency"]}, "put": {"operationId": "emergency_alerts_update", "description": "API endpoint for managing emergency alerts.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EmergencyAlertUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EmergencyAlertUpdate"}}}, "tags": ["emergency"]}, "patch": {"operationId": "emergency_alerts_partial_update", "description": "API endpoint for managing emergency alerts.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EmergencyAlertUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EmergencyAlertUpdate"}}}, "tags": ["emergency"]}, "delete": {"operationId": "emergency_alerts_delete", "description": "API endpoint for managing emergency alerts.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["emergency"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/emergency/alerts/{id}/false_alarm/": {"post": {"operationId": "emergency_alerts_false_alarm", "description": "Mark an emergency alert as a false alarm", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EmergencyAlert"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/EmergencyAlert"}}}, "tags": ["emergency"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/emergency/alerts/{id}/resolve/": {"post": {"operationId": "emergency_alerts_resolve", "description": "Mark an emergency alert as resolved", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EmergencyAlert"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/EmergencyAlert"}}}, "tags": ["emergency"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/emergency/contacts/": {"get": {"operationId": "emergency_contacts_list", "description": "API endpoint for managing emergency contacts.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/EmergencyContact"}}}}, "tags": ["emergency"]}, "post": {"operationId": "emergency_contacts_create", "description": "API endpoint for managing emergency contacts.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EmergencyContact"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/EmergencyContact"}}}, "tags": ["emergency"]}, "parameters": []}, "/emergency/contacts/primary/": {"get": {"operationId": "emergency_contacts_primary", "description": "Get primary emergency contact", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/EmergencyContact"}}}}, "tags": ["emergency"]}, "parameters": []}, "/emergency/contacts/{id}/": {"get": {"operationId": "emergency_contacts_read", "description": "API endpoint for managing emergency contacts.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EmergencyContact"}}}, "tags": ["emergency"]}, "put": {"operationId": "emergency_contacts_update", "description": "API endpoint for managing emergency contacts.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EmergencyContact"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EmergencyContact"}}}, "tags": ["emergency"]}, "patch": {"operationId": "emergency_contacts_partial_update", "description": "API endpoint for managing emergency contacts.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EmergencyContact"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EmergencyContact"}}}, "tags": ["emergency"]}, "delete": {"operationId": "emergency_contacts_delete", "description": "API endpoint for managing emergency contacts.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["emergency"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/health-insights/goals/": {"get": {"operationId": "health-insights_goals_list", "description": "API endpoint for managing health goals.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/HealthGoal"}}}}, "tags": ["health-insights"]}, "post": {"operationId": "health-insights_goals_create", "description": "API endpoint for managing health goals.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthGoal"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/HealthGoal"}}}, "tags": ["health-insights"]}, "parameters": []}, "/health-insights/goals/active/": {"get": {"operationId": "health-insights_goals_active", "description": "Get only active goals", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/HealthGoal"}}}}, "tags": ["health-insights"]}, "parameters": []}, "/health-insights/goals/{id}/": {"get": {"operationId": "health-insights_goals_read", "description": "API endpoint for managing health goals.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HealthGoal"}}}, "tags": ["health-insights"]}, "put": {"operationId": "health-insights_goals_update", "description": "API endpoint for managing health goals.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthGoalUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HealthGoalUpdate"}}}, "tags": ["health-insights"]}, "patch": {"operationId": "health-insights_goals_partial_update", "description": "API endpoint for managing health goals.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthGoalUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HealthGoalUpdate"}}}, "tags": ["health-insights"]}, "delete": {"operationId": "health-insights_goals_delete", "description": "API endpoint for managing health goals.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["health-insights"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/health-insights/goals/{id}/abandon/": {"post": {"operationId": "health-insights_goals_abandon", "description": "Mark a goal as abandoned", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthGoal"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/HealthGoal"}}}, "tags": ["health-insights"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/health-insights/goals/{id}/complete/": {"post": {"operationId": "health-insights_goals_complete", "description": "Mark a goal as completed", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthGoal"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/HealthGoal"}}}, "tags": ["health-insights"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/health-insights/insights/": {"get": {"operationId": "health-insights_insights_list", "description": "API endpoint for managing health insights.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/HealthInsight"}}}}, "tags": ["health-insights"]}, "post": {"operationId": "health-insights_insights_create", "description": "API endpoint for managing health insights.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthInsight"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/HealthInsight"}}}, "tags": ["health-insights"]}, "parameters": []}, "/health-insights/insights/generate/": {"post": {"operationId": "health-insights_insights_generate", "description": "Generate new insights based on user data", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthInsight"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/HealthInsight"}}}, "tags": ["health-insights"]}, "parameters": []}, "/health-insights/insights/{id}/": {"get": {"operationId": "health-insights_insights_read", "description": "API endpoint for managing health insights.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HealthInsight"}}}, "tags": ["health-insights"]}, "put": {"operationId": "health-insights_insights_update", "description": "API endpoint for managing health insights.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthInsight"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HealthInsight"}}}, "tags": ["health-insights"]}, "patch": {"operationId": "health-insights_insights_partial_update", "description": "API endpoint for managing health insights.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthInsight"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HealthInsight"}}}, "tags": ["health-insights"]}, "delete": {"operationId": "health-insights_insights_delete", "description": "API endpoint for managing health insights.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["health-insights"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/health-insights/insights/{id}/mark_as_read/": {"post": {"operationId": "health-insights_insights_mark_as_read", "description": "Mark an insight as read", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthInsight"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/HealthInsight"}}}, "tags": ["health-insights"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/health-insights/metrics/": {"get": {"operationId": "health-insights_metrics_list", "description": "API endpoint for tracking health metrics.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/HealthMetric"}}}}, "tags": ["health-insights"]}, "post": {"operationId": "health-insights_metrics_create", "description": "API endpoint for tracking health metrics.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthMetric"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/HealthMetric"}}}, "tags": ["health-insights"]}, "parameters": []}, "/health-insights/metrics/latest/": {"get": {"operationId": "health-insights_metrics_latest", "description": "Get the latest value for each metric type", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/HealthMetric"}}}}, "tags": ["health-insights"]}, "parameters": []}, "/health-insights/metrics/{id}/": {"get": {"operationId": "health-insights_metrics_read", "description": "API endpoint for tracking health metrics.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HealthMetric"}}}, "tags": ["health-insights"]}, "put": {"operationId": "health-insights_metrics_update", "description": "API endpoint for tracking health metrics.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthMetric"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HealthMetric"}}}, "tags": ["health-insights"]}, "patch": {"operationId": "health-insights_metrics_partial_update", "description": "API endpoint for tracking health metrics.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthMetric"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HealthMetric"}}}, "tags": ["health-insights"]}, "delete": {"operationId": "health-insights_metrics_delete", "description": "API endpoint for tracking health metrics.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["health-insights"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/health-insights/recommendations/": {"get": {"operationId": "health-insights_recommendations_list", "description": "API endpoint for managing health recommendations.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/HealthRecommendation"}}}}, "tags": ["health-insights"]}, "post": {"operationId": "health-insights_recommendations_create", "description": "API endpoint for managing health recommendations.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthRecommendation"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/HealthRecommendation"}}}, "tags": ["health-insights"]}, "parameters": []}, "/health-insights/recommendations/{id}/": {"get": {"operationId": "health-insights_recommendations_read", "description": "API endpoint for managing health recommendations.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HealthRecommendation"}}}, "tags": ["health-insights"]}, "put": {"operationId": "health-insights_recommendations_update", "description": "API endpoint for managing health recommendations.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthRecommendationUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HealthRecommendationUpdate"}}}, "tags": ["health-insights"]}, "patch": {"operationId": "health-insights_recommendations_partial_update", "description": "API endpoint for managing health recommendations.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthRecommendationUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HealthRecommendationUpdate"}}}, "tags": ["health-insights"]}, "delete": {"operationId": "health-insights_recommendations_delete", "description": "API endpoint for managing health recommendations.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["health-insights"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/health-insights/recommendations/{id}/complete/": {"post": {"operationId": "health-insights_recommendations_complete", "description": "Mark a recommendation as completed", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthRecommendation"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/HealthRecommendation"}}}, "tags": ["health-insights"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/health-insights/recommendations/{id}/dismiss/": {"post": {"operationId": "health-insights_recommendations_dismiss", "description": "Dismiss a recommendation", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthRecommendation"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/HealthRecommendation"}}}, "tags": ["health-insights"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/records/": {"get": {"operationId": "records_list", "summary": "ViewSet for medical records.", "description": "Provides CRUD operations for medical records.\nUsers can only see their own records unless they are doctors.", "parameters": [{"name": "record_type", "in": "query", "description": "record_type", "required": false, "type": "string", "enum": ["lab", "prescription", "imaging", "discharge", "other"]}, {"name": "user", "in": "query", "description": "user", "required": false, "type": "string"}, {"name": "uploaded_after", "in": "query", "description": "uploaded_after", "required": false, "type": "string"}, {"name": "uploaded_before", "in": "query", "description": "uploaded_before", "required": false, "type": "string"}, {"name": "title_contains", "in": "query", "description": "title_contains", "required": false, "type": "string"}, {"name": "description_contains", "in": "query", "description": "description_contains", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/MedicalRecord"}}}}, "tags": ["records"]}, "post": {"operationId": "records_create", "summary": "ViewSet for medical records.", "description": "Provides CRUD operations for medical records.\nUsers can only see their own records unless they are doctors.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MedicalRecord"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/MedicalRecord"}}}, "tags": ["records"]}, "parameters": []}, "/records/{id}/": {"get": {"operationId": "records_read", "summary": "ViewSet for medical records.", "description": "Provides CRUD operations for medical records.\nUsers can only see their own records unless they are doctors.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MedicalRecord"}}}, "tags": ["records"]}, "put": {"operationId": "records_update", "summary": "ViewSet for medical records.", "description": "Provides CRUD operations for medical records.\nUsers can only see their own records unless they are doctors.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MedicalRecord"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MedicalRecord"}}}, "tags": ["records"]}, "patch": {"operationId": "records_partial_update", "summary": "ViewSet for medical records.", "description": "Provides CRUD operations for medical records.\nUsers can only see their own records unless they are doctors.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MedicalRecord"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MedicalRecord"}}}, "tags": ["records"]}, "delete": {"operationId": "records_delete", "summary": "ViewSet for medical records.", "description": "Provides CRUD operations for medical records.\nUsers can only see their own records unless they are doctors.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["records"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/reminders/": {"get": {"operationId": "reminders_list", "description": "API endpoint for managing reminders.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Reminder"}}}}, "tags": ["reminders"]}, "post": {"operationId": "reminders_create", "description": "API endpoint for managing reminders.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReminderCreateUpdate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ReminderCreateUpdate"}}}, "tags": ["reminders"]}, "parameters": []}, "/reminders/logs/": {"get": {"operationId": "reminders_logs_list", "description": "API endpoint for viewing and updating reminder logs.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ReminderLog"}}}}, "tags": ["reminders"]}, "parameters": []}, "/reminders/logs/{id}/": {"get": {"operationId": "reminders_logs_read", "description": "API endpoint for viewing and updating reminder logs.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ReminderLog"}}}, "tags": ["reminders"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/reminders/logs/{id}/update_status/": {"patch": {"operationId": "reminders_logs_update_status", "description": "Update the status of a reminder log (complete, skip, snooze)", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReminderLog"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ReminderLog"}}}, "tags": ["reminders"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/reminders/medications/": {"get": {"operationId": "reminders_medications", "description": "Get only medication reminders", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Reminder"}}}}, "tags": ["reminders"]}, "parameters": []}, "/reminders/today/": {"get": {"operationId": "reminders_today", "description": "Get reminders for today", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Reminder"}}}}, "tags": ["reminders"]}, "parameters": []}, "/reminders/{id}/": {"get": {"operationId": "reminders_read", "description": "API endpoint for managing reminders.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Reminder"}}}, "tags": ["reminders"]}, "put": {"operationId": "reminders_update", "description": "API endpoint for managing reminders.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReminderCreateUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ReminderCreateUpdate"}}}, "tags": ["reminders"]}, "patch": {"operationId": "reminders_partial_update", "description": "API endpoint for managing reminders.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReminderCreateUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ReminderCreateUpdate"}}}, "tags": ["reminders"]}, "delete": {"operationId": "reminders_delete", "description": "API endpoint for managing reminders.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["reminders"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/symptoms/checks/": {"get": {"operationId": "symptoms_checks_list", "description": "API endpoint for symptom checking sessions.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/SymptomCheck"}}}}, "tags": ["symptoms"]}, "post": {"operationId": "symptoms_checks_create", "description": "API endpoint for symptom checking sessions.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SymptomCheckCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SymptomCheckCreate"}}}, "tags": ["symptoms"]}, "parameters": []}, "/symptoms/checks/recent/": {"get": {"operationId": "symptoms_checks_recent", "description": "Get most recent symptom check", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/SymptomCheck"}}}}, "tags": ["symptoms"]}, "parameters": []}, "/symptoms/checks/{id}/": {"get": {"operationId": "symptoms_checks_read", "description": "API endpoint for symptom checking sessions.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SymptomCheck"}}}, "tags": ["symptoms"]}, "put": {"operationId": "symptoms_checks_update", "description": "API endpoint for symptom checking sessions.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SymptomCheck"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SymptomCheck"}}}, "tags": ["symptoms"]}, "patch": {"operationId": "symptoms_checks_partial_update", "description": "API endpoint for symptom checking sessions.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SymptomCheck"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SymptomCheck"}}}, "tags": ["symptoms"]}, "delete": {"operationId": "symptoms_checks_delete", "description": "API endpoint for symptom checking sessions.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["symptoms"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/symptoms/predefined/": {"get": {"operationId": "symptoms_predefined_list", "description": "API endpoint for listing and retrieving predefined symptoms.", "parameters": [{"name": "body_part", "in": "query", "description": "body_part", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Symptom"}}}}, "tags": ["symptoms"]}, "parameters": []}, "/symptoms/predefined/{id}/": {"get": {"operationId": "symptoms_predefined_read", "description": "API endpoint for listing and retrieving predefined symptoms.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Symptom"}}}, "tags": ["symptoms"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this symptom.", "required": true, "type": "integer"}]}, "/symptoms/user-symptoms/": {"get": {"operationId": "symptoms_user-symptoms_list", "description": "API endpoint for managing user symptoms.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/UserSymptom"}}}}, "tags": ["symptoms"]}, "post": {"operationId": "symptoms_user-symptoms_create", "description": "API endpoint for managing user symptoms.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserSymptomCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/UserSymptomCreate"}}}, "tags": ["symptoms"]}, "parameters": []}, "/symptoms/user-symptoms/active/": {"get": {"operationId": "symptoms_user-symptoms_active", "description": "Get only active symptoms", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/UserSymptom"}}}}, "tags": ["symptoms"]}, "parameters": []}, "/symptoms/user-symptoms/{id}/": {"get": {"operationId": "symptoms_user-symptoms_read", "description": "API endpoint for managing user symptoms.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserSymptom"}}}, "tags": ["symptoms"]}, "put": {"operationId": "symptoms_user-symptoms_update", "description": "API endpoint for managing user symptoms.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserSymptomCreate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserSymptomCreate"}}}, "tags": ["symptoms"]}, "patch": {"operationId": "symptoms_user-symptoms_partial_update", "description": "API endpoint for managing user symptoms.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserSymptomCreate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserSymptomCreate"}}}, "tags": ["symptoms"]}, "delete": {"operationId": "symptoms_user-symptoms_delete", "description": "API endpoint for managing user symptoms.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["symptoms"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}}, "definitions": {"UserProfile": {"required": ["username"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "email": {"title": "Email address", "type": "string", "format": "email", "readOnly": true, "minLength": 1}, "username": {"title": "Username", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "full_name": {"title": "Full name", "type": "string", "maxLength": 255}, "age": {"title": "Age", "type": "integer", "x-nullable": true}, "gender": {"title": "Gender", "type": "string", "enum": ["M", "F", "O", "N"]}, "location": {"title": "Location", "type": "string", "maxLength": 255}, "is_doctor": {"title": "Is doctor", "type": "boolean", "readOnly": true}}}, "Appointment": {"required": ["patient", "doctor", "datetime", "end_time"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "patient": {"title": "Patient", "type": "integer"}, "doctor": {"title": "Doctor", "type": "integer"}, "patient_details": {"$ref": "#/definitions/UserProfile"}, "doctor_details": {"$ref": "#/definitions/UserProfile"}, "datetime": {"title": "Datetime", "type": "string", "format": "date-time"}, "end_time": {"title": "End time", "type": "string", "format": "date-time"}, "reason": {"title": "Reason", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["pending", "confirmed", "cancelled", "completed"]}, "status_display": {"title": "Status display", "type": "string", "readOnly": true, "minLength": 1}, "notes": {"title": "Notes", "description": "Doctor's notes about the appointment", "type": "string"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "ChatLog": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "message": {"title": "Message", "type": "string", "readOnly": true, "minLength": 1}, "response": {"title": "Response", "type": "string", "readOnly": true, "minLength": 1}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time", "readOnly": true}}}, "Treatment": {"required": ["diagnosis", "title", "description", "treatment_type", "start_date"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer", "readOnly": true}, "diagnosis": {"title": "Diagnosis", "type": "integer"}, "title": {"title": "Title", "type": "string", "maxLength": 200, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "treatment_type": {"title": "Treatment type", "type": "string", "enum": ["medication", "procedure", "therapy", "lifestyle", "monitoring", "other"]}, "medication_name": {"title": "Medication name", "type": "string", "maxLength": 200}, "dosage": {"title": "Dosage", "type": "string", "maxLength": 100}, "frequency": {"title": "Frequency", "type": "string", "maxLength": 100}, "duration": {"title": "Duration", "type": "string", "maxLength": 100}, "start_date": {"title": "Start date", "type": "string", "format": "date"}, "end_date": {"title": "End date", "type": "string", "format": "date", "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["planned", "active", "completed", "discontinued"]}, "instructions": {"title": "Instructions", "type": "string"}, "side_effects": {"title": "Side effects", "type": "string"}, "precautions": {"title": "Precautions", "type": "string"}, "effectiveness_rating": {"title": "Effectiveness rating", "description": "1-10 rating of effectiveness", "type": "integer", "x-nullable": true}, "adherence_rating": {"title": "Adherence rating", "description": "1-10 rating of adherence to treatment", "type": "integer", "x-nullable": true}, "notes": {"title": "Notes", "type": "string"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "FollowUp": {"required": ["diagnosis", "title", "follow_up_type", "recommended_date"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer", "readOnly": true}, "diagnosis": {"title": "Diagnosis", "type": "integer"}, "treatments": {"type": "array", "items": {"type": "integer"}, "uniqueItems": true}, "title": {"title": "Title", "type": "string", "maxLength": 200, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "follow_up_type": {"title": "Follow up type", "type": "string", "enum": ["check_up", "test", "specialist", "medication_review", "other"]}, "recommended_date": {"title": "Recommended date", "type": "string", "format": "date"}, "scheduled_date": {"title": "Scheduled date", "type": "string", "format": "date", "x-nullable": true}, "completed_date": {"title": "Completed date", "type": "string", "format": "date", "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["recommended", "scheduled", "completed", "missed", "cancelled"]}, "results": {"title": "Results", "type": "string"}, "notes": {"title": "Notes", "type": "string"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "Diagnosis": {"required": ["source", "title", "description", "diagnosis_date"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer", "readOnly": true}, "source": {"title": "Source", "type": "string", "enum": ["ai", "doctor", "user", "symptom_checker"]}, "doctor": {"title": "Doctor", "type": "integer", "x-nullable": true}, "doctor_details": {"title": "Doctor details", "type": "string", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 200, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "icd_code": {"title": "Icd code", "description": "ICD-10 or ICD-11 code", "type": "string", "maxLength": 20}, "confidence": {"title": "Confidence", "type": "string", "enum": ["low", "medium", "high", "confirmed"]}, "diagnosis_date": {"title": "Diagnosis date", "type": "string", "format": "date"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "status": {"title": "Status", "type": "string", "enum": ["active", "resolved", "chronic", "ruled_out"]}, "resolved_date": {"title": "Resolved date", "type": "string", "format": "date", "x-nullable": true}, "related_symptoms": {"title": "Related symptoms", "type": "object"}, "notes": {"title": "Notes", "type": "string"}, "treatments": {"type": "array", "items": {"$ref": "#/definitions/Treatment"}, "readOnly": true}, "follow_ups": {"type": "array", "items": {"$ref": "#/definitions/FollowUp"}, "readOnly": true}}}, "DiagnosisCreate": {"required": ["source", "title", "description", "diagnosis_date"], "type": "object", "properties": {"source": {"title": "Source", "type": "string", "enum": ["ai", "doctor", "user", "symptom_checker"]}, "doctor": {"title": "Doctor", "type": "integer", "x-nullable": true}, "title": {"title": "Title", "type": "string", "maxLength": 200, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "icd_code": {"title": "Icd code", "description": "ICD-10 or ICD-11 code", "type": "string", "maxLength": 20}, "confidence": {"title": "Confidence", "type": "string", "enum": ["low", "medium", "high", "confirmed"]}, "diagnosis_date": {"title": "Diagnosis date", "type": "string", "format": "date"}, "status": {"title": "Status", "type": "string", "enum": ["active", "resolved", "chronic", "ruled_out"]}, "resolved_date": {"title": "Resolved date", "type": "string", "format": "date", "x-nullable": true}, "related_symptoms": {"title": "Related symptoms", "type": "object"}, "notes": {"title": "Notes", "type": "string"}}}, "DiagnosisUpdate": {"required": ["title", "description"], "type": "object", "properties": {"title": {"title": "Title", "type": "string", "maxLength": 200, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "icd_code": {"title": "Icd code", "description": "ICD-10 or ICD-11 code", "type": "string", "maxLength": 20}, "confidence": {"title": "Confidence", "type": "string", "enum": ["low", "medium", "high", "confirmed"]}, "status": {"title": "Status", "type": "string", "enum": ["active", "resolved", "chronic", "ruled_out"]}, "resolved_date": {"title": "Resolved date", "type": "string", "format": "date", "x-nullable": true}, "notes": {"title": "Notes", "type": "string"}}}, "FollowUpUpdate": {"required": ["title"], "type": "object", "properties": {"title": {"title": "Title", "type": "string", "maxLength": 200, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "scheduled_date": {"title": "Scheduled date", "type": "string", "format": "date", "x-nullable": true}, "completed_date": {"title": "Completed date", "type": "string", "format": "date", "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["recommended", "scheduled", "completed", "missed", "cancelled"]}, "results": {"title": "Results", "type": "string"}, "notes": {"title": "Notes", "type": "string"}}}, "TreatmentUpdate": {"required": ["title", "description"], "type": "object", "properties": {"title": {"title": "Title", "type": "string", "maxLength": 200, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "status": {"title": "Status", "type": "string", "enum": ["planned", "active", "completed", "discontinued"]}, "end_date": {"title": "End date", "type": "string", "format": "date", "x-nullable": true}, "effectiveness_rating": {"title": "Effectiveness rating", "description": "1-10 rating of effectiveness", "type": "integer", "x-nullable": true}, "adherence_rating": {"title": "Adherence rating", "description": "1-10 rating of adherence to treatment", "type": "integer", "x-nullable": true}, "notes": {"title": "Notes", "type": "string"}}}, "DoctorReview": {"required": ["rating"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "doctor": {"title": "Doctor", "type": "integer", "readOnly": true}, "patient": {"title": "Patient", "type": "integer", "readOnly": true}, "patient_name": {"title": "Patient name", "type": "string", "readOnly": true, "minLength": 1}, "rating": {"title": "Rating", "type": "integer", "enum": [1, 2, 3, 4, 5]}, "comment": {"title": "Comment", "type": "string"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}}}, "DoctorProfile": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"$ref": "#/definitions/UserProfile"}, "specialties": {"title": "Specialties", "description": "List of doctor's specialties", "type": "object"}, "bio": {"title": "Bio", "type": "string"}, "education": {"title": "Education", "type": "string"}, "experience_years": {"title": "Experience years", "type": "integer"}, "rating": {"title": "Rating", "type": "number", "readOnly": true}, "location": {"title": "Location", "type": "string", "maxLength": 255}, "available_times": {"title": "Available times", "description": "Dictionary of available time slots", "type": "object"}, "profile_picture": {"title": "Profile picture", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "reviews": {"type": "array", "items": {"$ref": "#/definitions/DoctorReview"}, "readOnly": true}, "review_count": {"title": "Review count", "type": "string", "readOnly": true}}}, "DoctorProfileUpdate": {"type": "object", "properties": {"specialties": {"title": "Specialties", "description": "List of doctor's specialties", "type": "object"}, "bio": {"title": "Bio", "type": "string"}, "education": {"title": "Education", "type": "string"}, "experience_years": {"title": "Experience years", "type": "integer"}, "location": {"title": "Location", "type": "string", "maxLength": 255}, "available_times": {"title": "Available times", "description": "Dictionary of available time slots", "type": "object"}, "profile_picture": {"title": "Profile picture", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}}}, "EmergencyContact": {"required": ["name", "relationship", "phone_number"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 100, "minLength": 1}, "relationship": {"title": "Relationship", "type": "string", "maxLength": 50, "minLength": 1}, "phone_number": {"title": "Phone number", "type": "string", "maxLength": 20, "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254}, "is_primary": {"title": "Is primary", "type": "boolean"}, "address": {"title": "Address", "type": "string"}, "notes": {"title": "Notes", "type": "string"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "EmergencyAlert": {"required": ["trigger_type", "title", "description"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer", "readOnly": true}, "user_details": {"title": "User details", "type": "string", "readOnly": true}, "trigger_type": {"title": "Trigger type", "type": "string", "enum": ["user", "system", "symptom", "ai"]}, "status": {"title": "Status", "type": "string", "enum": ["active", "handled", "false_alarm"]}, "title": {"title": "Title", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "user_location": {"title": "User location", "description": "GPS coordinates or address", "type": "object"}, "severity": {"title": "Severity", "type": "string", "enum": ["low", "medium", "high", "critical"]}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "resolved_at": {"title": "Resolved at", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "contacts_notified": {"type": "array", "items": {"$ref": "#/definitions/EmergencyContact"}, "readOnly": true}, "notes": {"title": "Notes", "description": "Additional information about the emergency", "type": "string"}}}, "EmergencyAlertCreate": {"required": ["trigger_type", "title", "description"], "type": "object", "properties": {"trigger_type": {"title": "Trigger type", "type": "string", "enum": ["user", "system", "symptom", "ai"]}, "title": {"title": "Title", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "user_location": {"title": "User location", "description": "GPS coordinates or address", "type": "object"}, "severity": {"title": "Severity", "type": "string", "enum": ["low", "medium", "high", "critical"]}, "notes": {"title": "Notes", "description": "Additional information about the emergency", "type": "string"}}}, "EmergencyAlertUpdate": {"type": "object", "properties": {"status": {"title": "Status", "type": "string", "enum": ["active", "handled", "false_alarm"]}, "notes": {"title": "Notes", "description": "Additional information about the emergency", "type": "string"}, "resolved_at": {"title": "Resolved at", "type": "string", "format": "date-time", "x-nullable": true}}}, "HealthGoal": {"required": ["title", "goal_type", "start_date"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 200, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "goal_type": {"title": "Goal type", "type": "string", "enum": ["weight", "fitness", "nutrition", "sleep", "medical", "mental", "habit", "other"]}, "target_value": {"title": "Target value", "description": "Target numerical value (e.g., weight, steps)", "type": "number", "x-nullable": true}, "target_unit": {"title": "Target unit", "description": "Unit of measurement", "type": "string", "maxLength": 20}, "current_value": {"title": "Current value", "type": "number", "x-nullable": true}, "start_date": {"title": "Start date", "type": "string", "format": "date"}, "target_date": {"title": "Target date", "type": "string", "format": "date", "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["active", "completed", "abandoned"]}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "completed_at": {"title": "Completed at", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "completion_percentage": {"title": "Completion percentage", "type": "string", "readOnly": true}}}, "HealthGoalUpdate": {"required": ["title"], "type": "object", "properties": {"title": {"title": "Title", "type": "string", "maxLength": 200, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "current_value": {"title": "Current value", "type": "number", "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["active", "completed", "abandoned"]}, "target_date": {"title": "Target date", "type": "string", "format": "date", "x-nullable": true}}}, "HealthInsight": {"required": ["insight_type", "title", "description"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer", "readOnly": true}, "insight_type": {"title": "Insight type", "type": "string", "enum": ["diet", "exercise", "sleep", "stress", "preventive", "medication", "general"]}, "title": {"title": "Title", "type": "string", "maxLength": 200, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "source": {"title": "Source", "type": "string", "maxLength": 100, "minLength": 1}, "is_personalized": {"title": "Is personalized", "type": "boolean"}, "relevance_score": {"title": "Relevance score", "description": "0-1 score of relevance to user", "type": "number"}, "is_read": {"title": "Is read", "type": "boolean"}, "read_at": {"title": "Read at", "type": "string", "format": "date-time", "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "HealthMetric": {"required": ["metric_type", "value", "unit", "recorded_at"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer", "readOnly": true}, "metric_type": {"title": "Metric type", "type": "string", "enum": ["weight", "blood_pressure", "heart_rate", "steps", "sleep", "water", "glucose", "mood", "custom"]}, "custom_name": {"title": "Custom name", "description": "Name for custom metrics", "type": "string", "maxLength": 100}, "value": {"title": "Value", "type": "number"}, "unit": {"title": "Unit", "type": "string", "maxLength": 20, "minLength": 1}, "goal": {"title": "Goal", "type": "integer", "x-nullable": true}, "notes": {"title": "Notes", "type": "string"}, "recorded_at": {"title": "Recorded at", "type": "string", "format": "date-time"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}}}, "HealthRecommendation": {"required": ["title", "description", "action_steps"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer", "readOnly": true}, "insight": {"title": "Insight", "type": "integer", "x-nullable": true}, "title": {"title": "Title", "type": "string", "maxLength": 200, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "action_steps": {"title": "Action steps", "description": "Specific steps the user should take", "type": "string", "minLength": 1}, "resource_links": {"title": "Resource links", "description": "Links to helpful resources", "type": "object"}, "status": {"title": "Status", "type": "string", "enum": ["pending", "in_progress", "completed", "dismissed"]}, "priority": {"title": "Priority", "type": "string", "enum": ["low", "medium", "high"]}, "user_notes": {"title": "User notes", "type": "string"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "completed_at": {"title": "Completed at", "type": "string", "format": "date-time", "x-nullable": true}}}, "HealthRecommendationUpdate": {"type": "object", "properties": {"status": {"title": "Status", "type": "string", "enum": ["pending", "in_progress", "completed", "dismissed"]}, "user_notes": {"title": "User notes", "type": "string"}}}, "MedicalRecord": {"required": ["title", "record_type"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer", "readOnly": true}, "user_email": {"title": "User email", "type": "string", "format": "email", "readOnly": true, "minLength": 1}, "title": {"title": "Title", "type": "string", "maxLength": 100, "minLength": 1}, "file": {"title": "File", "type": "string", "readOnly": true, "format": "uri"}, "record_type": {"title": "Record type", "type": "string", "enum": ["lab", "prescription", "imaging", "discharge", "other"]}, "record_type_display": {"title": "Record type display", "type": "string", "readOnly": true, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "uploaded_at": {"title": "Uploaded at", "type": "string", "format": "date-time", "readOnly": true}}}, "ReminderLog": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "reminder": {"title": "Reminder", "type": "integer", "readOnly": true}, "scheduled_time": {"title": "Scheduled time", "type": "string", "format": "date-time", "readOnly": true}, "was_sent": {"title": "Was sent", "type": "boolean", "readOnly": true}, "sent_time": {"title": "Sent time", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["pending", "completed", "skipped", "snoozed"]}, "response_time": {"title": "Response time", "type": "string", "format": "date-time", "x-nullable": true}, "user_notes": {"title": "User notes", "type": "string"}}}, "Reminder": {"required": ["reminder_type", "title", "start_date", "time"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer", "readOnly": true}, "reminder_type": {"title": "Reminder type", "type": "string", "enum": ["medication", "appointment", "test", "lifestyle", "other"]}, "title": {"title": "Title", "type": "string", "maxLength": 200, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "start_date": {"title": "Start date", "type": "string", "format": "date"}, "end_date": {"title": "End date", "type": "string", "format": "date", "x-nullable": true}, "time": {"title": "Time", "type": "string"}, "recurrence": {"title": "Recurrence", "type": "string", "enum": ["once", "daily", "weekdays", "weekly", "monthly", "custom"]}, "custom_recurrence": {"title": "Custom recurrence", "type": "object"}, "dosage": {"title": "Dosage", "description": "Medication dosage", "type": "string", "maxLength": 100}, "notify_before": {"title": "Notify before", "description": "Minutes before to send notification", "type": "integer"}, "is_active": {"title": "Is active", "type": "boolean"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "logs": {"type": "array", "items": {"$ref": "#/definitions/ReminderLog"}, "readOnly": true}}}, "ReminderCreateUpdate": {"required": ["reminder_type", "title", "start_date", "time"], "type": "object", "properties": {"reminder_type": {"title": "Reminder type", "type": "string", "enum": ["medication", "appointment", "test", "lifestyle", "other"]}, "title": {"title": "Title", "type": "string", "maxLength": 200, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "start_date": {"title": "Start date", "type": "string", "format": "date"}, "end_date": {"title": "End date", "type": "string", "format": "date", "x-nullable": true}, "time": {"title": "Time", "type": "string"}, "recurrence": {"title": "Recurrence", "type": "string", "enum": ["once", "daily", "weekdays", "weekly", "monthly", "custom"]}, "custom_recurrence": {"title": "Custom recurrence", "type": "object"}, "dosage": {"title": "Dosage", "description": "Medication dosage", "type": "string", "maxLength": 100}, "notify_before": {"title": "Notify before", "description": "Minutes before to send notification", "type": "integer"}, "is_active": {"title": "Is active", "type": "boolean"}}}, "UserSymptom": {"required": ["user", "symptom", "severity", "onset_date"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer"}, "symptom": {"title": "Symptom", "type": "integer"}, "symptom_name": {"title": "Symptom name", "type": "string", "readOnly": true}, "severity": {"title": "Severity", "type": "integer", "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "onset_date": {"title": "Onset date", "type": "string", "format": "date"}, "is_active": {"title": "Is active", "description": "Whether the symptom is still present", "type": "boolean"}, "resolved_date": {"title": "Resolved date", "type": "string", "format": "date", "x-nullable": true}, "notes": {"title": "Notes", "type": "string"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "SymptomCheck": {"required": ["user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer"}, "user_details": {"title": "User details", "type": "string", "readOnly": true}, "symptoms": {"type": "array", "items": {"$ref": "#/definitions/UserSymptom"}, "readOnly": true}, "additional_info": {"title": "Additional info", "description": "Structured additional information like age, gender, medical history", "type": "object"}, "ai_analysis": {"title": "Ai analysis", "type": "string", "readOnly": true, "minLength": 1}, "possible_conditions": {"title": "Possible conditions", "description": "List of possible conditions with confidence levels", "type": "object", "readOnly": true}, "recommendations": {"title": "Recommendations", "type": "string", "readOnly": true, "minLength": 1}, "emergency_level": {"title": "Emergency level", "description": "Whether this requires emergency attention", "type": "boolean", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}}}, "SymptomCheckCreate": {"type": "object", "properties": {"symptom_ids": {"type": "array", "items": {"type": "integer"}}, "additional_info": {"title": "Additional info", "description": "Structured additional information like age, gender, medical history", "type": "object"}}}, "Symptom": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "body_part": {"title": "Body part", "type": "string", "maxLength": 50}, "severity_scale": {"title": "Severity scale", "description": "Scale of 1-10 for typical severity", "type": "integer"}, "common_related_conditions": {"title": "Common related conditions", "type": "object"}}}, "UserSymptomCreate": {"required": ["symptom", "severity", "onset_date"], "type": "object", "properties": {"symptom": {"title": "Symptom", "type": "integer"}, "severity": {"title": "Severity", "type": "integer", "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "onset_date": {"title": "Onset date", "type": "string", "format": "date"}, "is_active": {"title": "Is active", "description": "Whether the symptom is still present", "type": "boolean"}, "resolved_date": {"title": "Resolved date", "type": "string", "format": "date", "x-nullable": true}, "notes": {"title": "Notes", "type": "string"}}}}}